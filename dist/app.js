const dataJson=[{id:"Q-101",title:"What is India's capital",type:"radiogroup",options:["Delhi","Mumbai","Kolkatta","Pune"]},{id:"Q-103",title:"Grand Central Terminal, Park Avenue, New York is the world's",type:"radiogroup",options:["largest railway station","highest railway station","longest railway station","None of the above"]},{id:"Q-103",title:"Entomology is the science that studies",type:"dropdown",options:["Behavior of human beings","Insects","The origin and history of technical and scientific terms","The formation of rocks"]}];import Question from"./question.component.js";class Quiz{constructor(e){this.currentQuestionIndex=0,this.score=0,this.questions=e}getCurrentQuestion(){return this.questions[this.currentQuestionIndex]}isEnded(){return this.questions.length==this.currentQuestionIndex+1}select(e,t){this.questions.map(i=>{i.id==e&&(i.selectedOptIndex=t,console.log(this.questions))})}next(){null!==this.getCurrentQuestion().selectedOptIndex?this.currentQuestionIndex++:alert("select one option")}previous(){this.currentQuestionIndex&&this.currentQuestionIndex--}}class App{constructor(e){this.appName=e,this.appQuiz}getQuizData(t){return new Promise((i,n)=>{this.appQuiz=new Quiz(t.map(e=>new Question(e))),this.appQuiz.questions.length?i(this.appQuiz):n(e)})}init(){this.getQuizData(dataJson).then(e=>{e.isEnded()||this._render(e.getCurrentQuestion())})}submit(e,t){if(t){const i=document.getElementById(t+"_opts").value;e=this.appQuiz.getCurrentQuestion().options.indexOf(i)}this.appQuiz.getCurrentQuestion().selectedOptIndex=e}next(){this.appQuiz.isEnded()||(this.appQuiz.next(),this._render(this.appQuiz.getCurrentQuestion()))}previous(){this.appQuiz.currentQuestionIndex&&(this.appQuiz.previous(),this._render(this.appQuiz.getCurrentQuestion()))}_render(e){const t=document.querySelector(".question");switch(t.id=e.id,t.innerHTML=`<div class="title"> ${e.title}</div>`,e.type){case"radiogroup":t.innerHTML+=`<ul>${e.options.map((t,i)=>`\n                    <li>\n                        <input type="radio" \n                            id="${e.id}_${i}"\n                            name="${e.id}" \n                            onchange="questionnaire.submit(${i})" ${i==e.selectedOptIndex?"checked":""}  />\n                        <label for="${e.id}_${i}">${t}</label>\n                    </li>\n                `).join("")}\n                </ul>`;break;case"dropdown":t.innerHTML+=`<select id="${e.id}_opts" onchange="questionnaire.submit(null, '${e.id}')" ><option value="null" ></option>\n                                ${e.options.map((t,i)=>`<option ${i==e.selectedOptIndex?"selected":""} value="${t}">${t}</option>`).join("")}\n                            </select>`}}}const questionnaire=new App("questionnaire");questionnaire.init();